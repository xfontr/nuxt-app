<script lang="ts" setup>
import { Pointer } from "@portfolio/ui";

const props = defineProps<{ isReversed: boolean }>();
const { t } = useI18n();

const handleCta = () => {
    if (props.isReversed) {
        window.scrollBy({ top: 750, behavior: "smooth" });
    }
};
</script>

<template>
    <Pointer
        class="summary"
        :can-overflow="false"
        :size="1"
        :animate="false"
    >
        <!-- Scrollable vertical content -->
        <div class="summary__content">
            <div class="about-me">
                <p class="about-me__text">
                    {{ t("landing.summary.description") }}
                </p>
            </div>

            <div class="about-me">
                <p class="about-me__text">
                    hi again: {{ t("landing.summary.description") }}
                </p>
            </div>
        </div>

        <!-- CTA stays fixed -->
        <button
            type="button"
            :class="['summary__cta', { reversed: isReversed }]"
            @click="handleCta"
        >
            <span v-if="isReversed">{{ t("global.scroll") }}</span>
            <span
                v-else
                class="cta-text"
                >{{ t("landing.summary.cta") }}</span
            >
        </button>

        <template #pointer>
            <div :class="['summary__pointer', { reversed: isReversed }]"></div>
        </template>
    </Pointer>
</template>

<style lang="scss" scoped>
.summary {
    position: relative;

    &__content {
        display: flex;
        flex-direction: column;
        scroll-snap-type: y mandatory;
        overflow-y: scroll;
        height: 100vh;
        -ms-overflow-style: none;
        scrollbar-width: none;

        &::-webkit-scrollbar {
            display: none;
        }
    }

    &__pointer {
        mix-blend-mode: difference;
        color: $colors-primary;
        background-color: $colors-secondary;
        border-radius: 50%;
        transition: 1s;
        display: flex;
        justify-content: center;
        align-items: center;
        pointer-events: none;
    }

    &__cta {
        position: fixed;
        left: 3rem;
        bottom: 3rem;
        z-index: 10;
        border-radius: 50%;
        height: 6rem;
        width: 6rem;
        display: flex;
        justify-content: center;
        align-items: center;
        transform: rotate(-12deg);
        transition: 0.8s;
        color: $colors-primary;
        background-color: $colors-secondary;
        cursor: none;

        &.reversed {
            color: $colors-secondary;
            background-color: $colors-primary;
        }

        &:hover {
            transform: rotate(-372deg) scale(1.1);
        }

        &:active {
            transition: 0.2s;
            transform: scale(0.9);
        }
    }
}

.about-me {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    flex-shrink: 0;
    scroll-snap-align: center;
    scroll-snap-stop: always;

    &__text {
        text-align: center;
        max-width: 30rem;
    }
}

@keyframes rotation-in {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(721deg);
    }
}

.cta-text {
    animation: rotation-in 1.5s ease;
}

.reversed {
    color: $colors-secondary;
    background-color: $colors-primary;
}
</style>
